name: Terraform CI/CD

on:
  push:
    branches:
      - dev
      - test
      - main

env:
  AWS_REGION: us-east-1
  TF_VAR_project_name: demo-terraform-aws-lambda

jobs:
  terraform:
    name: Deploy to ${{ github.ref_name }}
    runs-on: ubuntu-latest

    environment: ${{ github.ref_name == 'main' && 'production' || '' }}

    permissions:
      id-token: write
      contents: read

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python (for Lambda packaging)
      uses: actions/setup-python@v5
      with:
        python-version: 3.11

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Set environment variables
      run: |
        echo "TF_BACKEND_BUCKET=${{ secrets.TF_BACKEND_BUCKET }}" >> $GITHUB_ENV
        echo "TF_BACKEND_REGION=${{ secrets.TF_BACKEND_REGION }}" >> $GITHUB_ENV
        echo "TF_BACKEND_DDB_TABLE=${{ secrets.TF_BACKEND_DDB_TABLE }}" >> $GITHUB_ENV
        echo "TF_BACKEND_KEY=${{ secrets.TF_BACKEND_KEY }}" >> $GITHUB_ENV

        if [[ "${{ github.ref_name }}" == "main" ]]; then
          echo "DEPLOY_ENVIRONMENT=prod" >> $GITHUB_ENV
        else
          echo "DEPLOY_ENVIRONMENT=${{ github.ref_name }}" >> $GITHUB_ENV
        fi

    - name: Generate backend.tf
      run: |
        make backend


    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Terraform init
      run: |
        make init ENV=${{ env.DEPLOY_ENVIRONMENT }}

    - name: Terraform format check
      run: terraform fmt -check

    - name: Terraform validate
      run: terraform validate

    - name: Terraform plan
      run: make plan ENV=${{ env.DEPLOY_ENVIRONMENT }}

    - name: Terraform apply (auto for dev/test)
      if: github.ref_name != 'main'
      run: make apply ENV=${{ env.DEPLOY_ENVIRONMENT }}

    - name: Terraform apply to prod (manual approval via environment)
      if: github.ref_name == 'main'
      run: make apply ENV=${{ env.DEPLOY_ENVIRONMENT }}

    - name: Test Lambda HTTP Endpoint
      run: |
        API_URL=$(terraform output -raw api_url)

        MAX_RETRIES=2
        DELAY=5

        for i in $(seq 0 $MAX_RETRIES); do
          echo "Attempt $((i + 1)) to call $API_URL/healthz"
          if curl --fail "$API_URL/healthz"; then
            echo "✅ Success"
            break
          elif [ "$i" -lt "$MAX_RETRIES" ]; then
            echo "❌ Failed. Retrying in $DELAY seconds..."
            sleep $DELAY
          else
            echo "❌ Final attempt failed. Exiting with error."
            exit 1
          fi
        done